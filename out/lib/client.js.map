{"version":3,"sources":["../../src/lib/client.js"],"names":["Client","baseurl","username","password","_baseUrl","_options","headers","json","auth","Object","assign","user","pass","sendImmediately","options","_executeRequest","data","body","requestName","uri","encodeURI","fromNullable","statusCode","Nothing"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;IAEqBA,M;AAEnB,kBAAaC,OAAb,EAAsBC,QAAtB,EAAgCC,QAAhC,EAA0C;AAAA;;AACxC,SAAKC,QAAL,GAAmBH,OAAnB;AACA,SAAKI,QAAL,GAAgB;AACdC,eAAS;AACP,wBAAgB,kBADT;AAEP,kBAAU;AAFH,OADK;AAKdC,YAAM,IALQ;AAMdC,YAAM;AACJ,gBAAQN,QADJ;AAEJ,gBAAQC,QAFJ;AAGJ,2BAAmB;AAHf;AANQ,KAAhB;;AAaA,QAAI,CAAC,CAACD,QAAF,IAAc,CAAC,CAACC,QAApB,EAA8B;AAC5BM,aAAOC,MAAP,CAAc,KAAKL,QAAnB,EAA6B,EAAEG,MAAM,EAAEG,MAAMT,QAAR,EAAkBU,MAAMT,QAAxB,EAAkCU,iBAAiB,IAAnD,EAAR,EAA7B;AACD;AACF;;;;;4EAEWC,O;;;;;iDACH,KAAKC,eAAL,CAAqB,KAArB,EAA4BD,OAA5B,C;;;;;;;;;;;;;;;;;;;8EAGGA,O,EAASE,I;;;;;AACnBF,0BAAUL,OAAOC,MAAP,CAAcI,OAAd,EAAuB,EAAEG,MAAMD,IAAR,EAAvB,CAAV;kDACO,KAAKD,eAAL,CAAqB,KAArB,EAA4BD,OAA5B,C;;;;;;;;;;;;;;;;;;;8EAGIA,O,EAASE,I;;;;;AACpBF,0BAAUL,OAAOC,MAAP,CAAcI,OAAd,EAAuB,EAAEG,MAAMD,IAAR,EAAvB,CAAV;kDACO,KAAKD,eAAL,CAAqB,MAArB,EAA6BD,OAA7B,C;;;;;;;;;;;;;;;;;;;8EAGMA,O;;;;;kDACN,KAAKC,eAAL,CAAqB,QAArB,EAA+BD,OAA/B,C;;;;;;;;;;;;;;;;;;;8EAGcI,W,EAAaJ,O;;;;;AAClCA,0BAAUL,OAAOC,MAAP,CAAcI,OAAd,EAAuB,KAAKT,QAA5B,CAAV;AACAS,wBAAQK,GAAR,GAAcC,UAAUN,QAAQK,GAAlB,CAAd;;;;uBAEkC,yBAAQD,WAAR,EAAqBJ,OAArB,C;;;;+DAAnBO,Y;;;;;;sBAET,aAAEC,UAAF,KAAiB,G;;;;;kDACZ,eAAMC,OAAN,E;;;;;;;;;;;;;;;;;;;;;;;;kBA/CMvB,M","file":"client.js","sourcesContent":["import request from 'request-promise';\nimport maybe from 'data.maybe';\n\nexport default class Client {\n\n  constructor (baseurl, username, password) {\n    this._baseUrl = `${baseurl}/httpAuth/app/rest`;\n    this._options = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      json: true,\n      auth: {\n        'user': username,\n        'pass': password,\n        'sendImmediately': true\n      }\n    };\n\n    if (!!username && !!password) {\n      Object.assign(this._options, { auth: { user: username, pass: password, sendImmediately: true } });\n    }\n  }\n\n  async _get (options) {\n    return this._executeRequest('get', options);\n  }\n\n  async _put (options, data) {\n    options = Object.assign(options, { body: data });\n    return this._executeRequest('put', options);\n  }\n\n  async _post (options, data) {\n    options = Object.assign(options, { body: data });\n    return this._executeRequest('post', options);\n  }\n\n  async _delete (options) {\n    return this._executeRequest('delete', options);\n  }\n\n  async _executeRequest (requestName, options) {\n    options = Object.assign(options, this._options);\n    options.uri = encodeURI(options.uri);\n    try {\n      return maybe.fromNullable(await request[requestName](options));\n    } catch (e) {\n      if (e.statusCode === 404) {\n        return maybe.Nothing();\n      }\n\n      throw e;\n    }\n  }\n}\n\n"]}