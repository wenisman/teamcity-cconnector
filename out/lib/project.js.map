{"version":3,"sources":["../../src/lib/project.js"],"names":["Project","baseurl","username","password","_baseUrl","name","uri","parentId","_post","_createRequestJson","data","_put","parent","args","projJson","parentProject","id"],"mappings":";;;;;;;;;;AAAA;;;;;;;;;;;;;;IAEqBA,O;;;AAEnB;;;AAGA,mBAAaC,OAAb,EAAsBC,QAAtB,EAAgCC,QAAhC,EAA0C;AAAA;;AAAA,kHAClCF,OADkC,EACzBC,QADyB,EACfC,QADe;;AAExC,UAAKC,QAAL,GAAmB,MAAKA,QAAxB;AAFwC;AAGzC;;AAED;;;;;;;;;4EAIWC,I;;;;;wJACS,EAAEC,KAAQ,KAAKF,QAAb,aAA6BC,IAA/B,E;;;;;;;;;;;;;;;;;AAGpB;;;;;;;;8EAIcA,I,EAAME,Q;;;;;kDACX,KAAKC,KAAL,CAAW,EAAEF,KAAK,KAAKF,QAAZ,EAAX,EAAmC,KAAKK,kBAAL,CAAwB,EAACJ,UAAD,EAAOE,kBAAP,EAAxB,CAAnC,C;;;;;;;;;;;;;;;;;AAGT;;;;;;;;8EAIcG,I;;;;;kDACL,KAAKC,IAAL,CAAU,EAAEL,KAAK,KAAKF,QAAZ,EAAV,EAAkCM,IAAlC,C;;;;;;;;;;;;;;;;;AAGT;;;;;;;;8EAIcE,M;;;;;4JACS,EAAEN,KAAQ,KAAKF,QAAb,aAA6BQ,MAA/B,E;;;;;;;;;;;;;;;;;;uCAGHC,I,EAAM;AACxB,UAAIC,WAAW,EAAET,MAAMQ,KAAKR,IAAb,EAAf;;AAEA,UAAIQ,KAAKN,QAAT,EAAmB;AACjBO,iBAASC,aAAT,GAAyB;AACvBC,cAAIH,KAAKN;AADc,SAAzB;AAGD;;AAED,aAAOO,QAAP;AACD;;;;;;kBApDkBd,O;AAqDpB","file":"project.js","sourcesContent":["import Client from './client';\n\nexport default class Project extends Client {\n\n  /**\n   * @constructor\n   */\n  constructor (baseurl, username, password) {\n    super(baseurl, username, password);\n    this._baseUrl = `${this._baseUrl}/projects/`;\n  }\n\n  /**\n   * Get the project that matches the name provided\n   * @param {string} name - the name of the project\n   */\n  async get (name) {\n    return super._get({ uri: `${this._baseUrl}name:${name}` });\n  }\n\n  /**\n   * Create a basic project with the name provided\n   * @param {string} parentId - the Id of the parent that this project belongs to\n   */\n  async create (name, parentId) {\n    return this._post({ uri: this._baseUrl }, this._createRequestJson({name, parentId}));\n  }\n\n  /**\n   * Update the project with the provided data\n   * @param {project} data - the full data object required to build a project\n   */\n  async update (data) {\n    return this._put({ uri: this._baseUrl }, data);\n  }\n\n  /**\n   * Delete the project with the provided name\n   * @param {string} name - the name of the project to delete\n   */\n  async delete (parent) {\n    return super._delete({ uri: `${this._baseUrl}name:${parent}` });\n  }\n\n  _createRequestJson (args) {\n    var projJson = { name: args.name };\n\n    if (args.parentId) {\n      projJson.parentProject = {\n        id: args.parentId\n      };\n    }\n\n    return projJson;\n  }\n};\n"]}