{"version":3,"sources":["../../../src/lib/buildtype.js"],"names":["BuildType","baseUrl","name","password","_buildTypesUrl","_baseUrl","project","_createBuildTypesUrl","projectId","template","_post","uri","_createRequestJson","args","request","id"],"mappings":";;;;;;;;;;AAAA;;;;;;;;;;;;;;IAEqBA,S;;;AAEnB,qBAAaC,OAAb,EAAsBC,IAAtB,EAA4BC,QAA5B,EAAsC;AAAA;;AAAA,sHAC9BF,OAD8B,EACrBC,IADqB,EACfC,QADe;;AAEpC,UAAKC,cAAL,GAAyB,MAAKC,QAA9B;AAFoC;AAGrC;;AAED;;;;;;;;;;4EAKWH,I,EAAMI,O;;;;;4JACM,KAAKC,oBAAL,CAA0BD,OAA1B,C,aAA0CJ,I;;;;;;;;;;;;;;;;;AAGjE;;;;;;;;;;8EAMcA,I,EAAMM,S,EAAWC,Q;;;;;kDACtB,KAAKC,KAAL,CAAW,EAAEC,KAAK,KAAKP,cAAZ,EAAX,EAAyC,KAAKQ,kBAAL,CAAwB,EAACV,UAAD,EAAOM,oBAAP,EAAkBC,kBAAlB,EAAxB,CAAzC,C;;;;;;;;;;;;;;;;;;yCAGaH,O,EAAS;AAC7B,aAAU,KAAKD,QAAf,aAA+BC,OAA/B;AACD;;;uCAEmBO,I,EAAM;AACxB,UAAIC,UAAU;AACZZ,cAAMW,KAAKX,IADC;AAEZM,mBAAWK,KAAKL;AAFJ,OAAd;;AAKA,UAAIK,KAAKJ,QAAT,EAAmB;AACjBK,gBAAQL,QAAR,GAAmB;AACjBM,cAAIF,KAAKJ;AADQ,SAAnB;AAGD;;AAED,aAAOK,OAAP;AACD;;;;;;kBA3CkBd,S","file":"buildtype.js","sourcesContent":["import Client from './client';\n\nexport default class BuildType extends Client {\n\n  constructor (baseUrl, name, password) {\n    super(baseUrl, name, password);\n    this._buildTypesUrl = `${this._baseUrl}/buildTypes/`;\n  }\n\n  /**\n   * Get the buildType that matches the name provided\n   * @param {string} name - the name of the buildType to look for\n   * @param {string} project - the name of the parent project for the buildType\n   */\n  async get (name, project) {\n    return super._get(`${this._createBuildTypesUrl(project)}name:${name}`);\n  }\n\n  /**\n   * Create the request to send to teamcity\n   * @param {string} args.name - the name of the buildType to create\n   * @param {string} args.projectId - the id of the project the buildType will belong to\n   * @param {string} args.template - the id of the template to use for the buildType\n   */\n  async create (name, projectId, template) {\n    return this._post({ uri: this._buildTypesUrl }, this._createRequestJson({name, projectId, template}));\n  }\n\n  _createBuildTypesUrl (project) {\n    return `${this._baseUrl}name:${project}/buildTypes/`;\n  }\n\n  _createRequestJson (args) {\n    var request = {\n      name: args.name,\n      projectId: args.projectId\n    };\n\n    if (args.template) {\n      request.template = {\n        id: args.template\n      };\n    }\n\n    return request;\n  }\n}\n"]}