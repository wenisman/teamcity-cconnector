{"version":3,"sources":["../../test/buildtype.js"],"names":["describe","bt","proj","before","beforeEach","get","name","existing","isNothing","create","parent","afterEach","delete","it","project","build","template","output","console","log"],"mappings":";;AAAA;;;;AACA;;;;;;;;AAEAA,SAAS,iBAAT,EAA4B,YAAM;AAChC,MAAIC,WAAJ;AAAA,MAAQC,aAAR;;AAEAC,mDAAO;AAAA;AAAA;AAAA;AAAA;AACLD,mBAAO,sBAAY,uBAAZ,EAAqC,SAArC,EAAgD,SAAhD,CAAP;AACAD,iBAAK,wBAAc,uBAAd,EAAuC,SAAvC,EAAkD,SAAlD,CAAL;;AAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;;AAKAG,uDAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACcF,KAAKG,GAAL,CAAS,EAACC,MAAM,QAAP,EAAT,CADd;;AAAA;AACHC,oBADG;;AAAA,iBAELA,SAASC,SAFJ;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAGDN,KAAKO,MAAL,CAAY,EAACH,MAAM,QAAP,EAAZ,CAHC;;AAAA;AAAA;AAAA,mBAIDJ,KAAKO,MAAL,CAAY,EAACH,MAAM,OAAP,EAAgBI,QAAQ,QAAxB,EAAZ,CAJC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAX;;AAQAC,YAAU,yBAAV,4CAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC7BT,KAAKU,MAAL,CAAY,EAACN,MAAM,QAAP,EAAZ,CAD6B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArC;;AAIAO,KAAG,2BAAH,4CAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACVZ,GAAGI,GAAH,CAAO,EAACC,MAAM,YAAP,EAAqBQ,SAAS,OAA9B,EAAP,CADU;;AAAA;AACxBC,iBADwB;;AAAA,iBAE1BA,MAAMP,SAFoB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAGPP,GAAGQ,MAAH,CAAU,EAACH,MAAM,YAAP,EAAqBI,QAAQ,cAA7B,EAA6CM,UAAU,0BAAvD,EAAV,CAHO;;AAAA;AAGtBC,kBAHsB;;AAI5BC,oBAAQC,GAAR,CAAYF,MAAZ;;AAJ4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhC;AAOD,CA3BD","file":"buildtype.js","sourcesContent":["import BuildType from '../src/lib/buildtype';\nimport Project from '../src/lib/project';\n\ndescribe('buildType tests', () => {\n  let bt, proj;\n\n  before(async () => {\n    proj = new Project('http://localhost:8111', 'testusr', 'testpwd');\n    bt = new BuildType('http://localhost:8111', 'testusr', 'testpwd');\n  });\n\n  beforeEach(async () => {\n    const existing = await proj.get({name: 'Parent'});\n    if (existing.isNothing) {\n      await proj.create({name: 'Parent'});\n      await proj.create({name: 'Child', parent: 'Parent'});\n    }\n  });\n\n  afterEach('should delete a project', async () => {\n    await proj.delete({name: 'Parent'});\n  });\n\n  it('should create a buildType', async () => {\n    const build = await bt.get({name: 'test build', project: 'Child'});\n    if (build.isNothing) {\n      const output = await bt.create({name: 'test build', parent: 'Parent_Child', template: 'Default_DotNet_BuildTest'});\n      console.log(output);\n    }\n  });\n});\n"]}