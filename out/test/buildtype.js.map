{"version":3,"sources":["../../test/buildtype.js"],"names":["describe","bt","proj","assert","expect","before","beforeEach","get","existing","isNothing","create","afterEach","it","build","output","console","log"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEAA,SAAS,iBAAT,EAA4B,YAAM;AAChC,MAAIC,WAAJ;AAAA,MAAQC,aAAR;AACA,MAAIC,SAAS,eAAKA,MAAlB;AACA,MAAIC,SAAS,eAAKA,MAAlB;;AAEAC,mDAAO;AAAA;AAAA;AAAA;AAAA;AACLH,mBAAO,sBAAY,4BAAZ,EAA0C,SAA1C,EAAqD,SAArD,CAAP;AACAD,iBAAK,wBAAc,4BAAd,EAA4C,SAA5C,EAAuD,SAAvD,CAAL;;AAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;;AAKAK,uDAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACcJ,KAAKK,GAAL,CAAS,QAAT,CADd;;AAAA;AACHC,oBADG;;AAAA,iBAELA,SAASC,SAFJ;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAGDP,KAAKQ,MAAL,CAAY,QAAZ,CAHC;;AAAA;AAAA;AAAA,mBAIDR,KAAKQ,MAAL,CAAY,OAAZ,EAAqB,QAArB,CAJC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAX;;AAQAC,YAAU,yBAAV,4CAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArC;;AAIAC,KAAG,2BAAH,4CAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACVX,GAAGM,GAAH,CAAO,YAAP,EAAqB,OAArB,CADU;;AAAA;AACxBM,iBADwB;;AAAA,iBAE1BA,MAAMJ,SAFoB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAGPR,GAAGS,MAAH,CAAU,YAAV,EAAwB,cAAxB,EAAwC,cAAxC,CAHO;;AAAA;AAGtBI,kBAHsB;;AAI5BC,oBAAQC,GAAR,CAAYF,MAAZ;;AAJ4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhC;AAOD,CA7BD","file":"buildtype.js","sourcesContent":["import BuildType from '../src/lib/buildtype';\nimport Project from '../src/lib/project';\nimport chai from 'chai';\nimport maybe from 'data.maybe';\n\ndescribe('buildType tests', () => {\n  let bt, proj;\n  let assert = chai.assert;\n  let expect = chai.expect;\n\n  before(async () => {\n    proj = new Project('http://192.168.99.100:8111', 'testusr', 'testpwd');\n    bt = new BuildType('http://192.168.99.100:8111', 'testusr', 'testpwd');\n  });\n\n  beforeEach(async () => {\n    const existing = await proj.get('Parent');\n    if (existing.isNothing) {\n      await proj.create('Parent');\n      await proj.create('Child', 'Parent');\n    }\n  });\n\n  afterEach('should delete a project', async () => {\n    // await proj.delete('Parent');\n  });\n\n  it('should create a buildType', async () => {\n    const build = await bt.get('test build', 'Child');\n    if (build.isNothing) {\n      const output = await bt.create('test build', 'Parent_Child', 'NetBuildTest');\n      console.log(output);\n    }\n  });\n});\n"]}