{"version":3,"sources":["../../test/vcstoot.js"],"names":["describe","vcs","proj","before","beforeEach","get","name","existing","isNothing","create","parent","afterEach","delete","it","projectName","url","branch","vcsType","output","should","be","false"],"mappings":";;AAAA;;;;AACA;;;;;;;;AAEAA,SAAS,eAAT,EAA0B,YAAM;AAC9B,MAAIC,YAAJ;AAAA,MAASC,aAAT;;AAEAC,mDAAO;AAAA;AAAA;AAAA;AAAA;AACLD,mBAAO,sBAAY,uBAAZ,EAAqC,SAArC,EAAgD,SAAhD,CAAP;AACAD,kBAAM,sBAAY,uBAAZ,EAAqC,SAArC,EAAgD,SAAhD,CAAN;;AAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;;AAKAG,uDAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACcF,KAAKG,GAAL,CAAS,EAACC,MAAM,QAAP,EAAT,CADd;;AAAA;AACHC,oBADG;;AAAA,iBAELA,SAASC,SAFJ;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAGDN,KAAKO,MAAL,CAAY,EAACH,MAAM,QAAP,EAAZ,CAHC;;AAAA;AAAA;AAAA,mBAIDJ,KAAKO,MAAL,CAAY,EAACH,MAAM,OAAP,EAAgBI,QAAQ,QAAxB,EAAZ,CAJC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAX;;AAQAC,YAAU,yBAAV,4CAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC7BT,KAAKU,MAAL,CAAY,EAACN,MAAM,QAAP,EAAZ,CAD6B;;AAAA;AAAA;AAAA,mBAE7BL,IAAIW,MAAJ,CAAW,EAACN,MAAM,eAAP,EAAX,CAF6B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArC;;AAKAO,KAAG,yBAAH,4CAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACPZ,IAAIQ,MAAJ,CAAW;AAC9BH,oBAAM,eADwB;AAE9BQ,2BAAa,OAFiB;AAG9BC,mBAAK,oDAHyB;AAI9BC,sBAAQ,QAJsB;AAK9BC,uBAAS;AALqB,aAAX,CADO;;AAAA;AACtBC,kBADsB;;;AAS5BA,mBAAOV,SAAP,CAAiBW,MAAjB,CAAwBC,EAAxB,CAA2BC,KAA3B;;AAT4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B;AAWD,CAhCD","file":"vcstoot.js","sourcesContent":["import VcsRoot from '../src/lib/vcsroot';\nimport Project from '../src/lib/project';\n\ndescribe('VcsRoot tests', () => {\n  let vcs, proj;\n\n  before(async () => {\n    proj = new Project('http://localhost:8111', 'testusr', 'testpwd');\n    vcs = new VcsRoot('http://localhost:8111', 'testusr', 'testpwd');\n  });\n\n  beforeEach(async () => {\n    const existing = await proj.get({name: 'Parent'});\n    if (existing.isNothing) {\n      await proj.create({name: 'Parent'});\n      await proj.create({name: 'Child', parent: 'Parent'});\n    }\n  });\n\n  afterEach('should delete a project', async () => {\n    await proj.delete({name: 'Parent'});\n    await vcs.delete({name: 'Test Vcs Root'});\n  });\n\n  it('should create a vcsroot', async () => {\n    const output = await vcs.create({\n      name: 'Test Vcs Root',\n      projectName: 'Child',\n      url: 'https://github.com/wenisman/teamcity-connector.git',\n      branch: 'master',\n      vcsType: 'jetbrains.git'\n    });\n\n    output.isNothing.should.be.false;\n  });\n});\n"]}