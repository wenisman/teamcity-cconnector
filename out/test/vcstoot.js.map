{"version":3,"sources":["../../test/vcstoot.js"],"names":["describe","vcs","proj","assert","before","beforeEach","get","existing","isNothing","create","afterEach","it","name","projectName","url","branch","vcsType","then","result","catch","e","console","log","fail"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;;;AAEAA,SAAS,eAAT,EAA0B,YAAM;AAC9B,MAAIC,YAAJ;AAAA,MAASC,aAAT;AACA,MAAIC,SAAS,eAAKA,MAAlB;;AAEAC,mDAAO;AAAA;AAAA;AAAA;AAAA;AACLF,mBAAO,sBAAY,4BAAZ,EAA0C,SAA1C,EAAqD,SAArD,CAAP;AACAD,kBAAM,sBAAY,4BAAZ,EAA0C,SAA1C,EAAqD,SAArD,CAAN;;AAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;;AAKAI,uDAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACcH,KAAKI,GAAL,CAAS,QAAT,CADd;;AAAA;AACHC,oBADG;;AAAA,iBAELA,SAASC,SAFJ;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAGDN,KAAKO,MAAL,CAAY,QAAZ,CAHC;;AAAA;AAAA;AAAA,mBAIDP,KAAKO,MAAL,CAAY,OAAZ,EAAqB,QAArB,CAJC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAX;;AAQAC,YAAU,yBAAV,4CAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArC;;AAIAC,KAAG,oCAAH,4CAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACjCV,IAAIQ,MAAJ,CAAW;AACfG,oBAAM,eADS;AAEfC,2BAAa,OAFE;AAGfC,mBAAK,oDAHU;AAIfC,sBAAQ,QAJO;AAKfC,uBAAS;AALM,aAAX,EAOLC,IAPK,CAOA,UAACC,MAAD,EAAY;AAChB;AACD,aATK,EAULC,KAVK,CAUC,UAACC,CAAD,EAAO;AACZC,sBAAQC,GAAR,CAAYF,CAAZ;AACAjB,qBAAOoB,IAAP,CAAY,IAAZ,EAAkB,IAAlB,EAAwB,4BAAxB;AACD,aAbK,CADiC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzC;AAkBD,CAvCD","file":"vcstoot.js","sourcesContent":["import VcsRoot from '../src/lib/vcsroot';\nimport Project from '../src/lib/project';\nimport chai from 'chai';\n\ndescribe('VcsRoot tests', () => {\n  let vcs, proj;\n  let assert = chai.assert;\n\n  before(async () => {\n    proj = new Project('http://192.168.99.100:8111', 'testusr', 'testpwd');\n    vcs = new VcsRoot('http://192.168.99.100:8111', 'testusr', 'testpwd');\n  });\n\n  beforeEach(async () => {\n    const existing = await proj.get('Parent');\n    if (existing.isNothing) {\n      await proj.create('Parent');\n      await proj.create('Child', 'Parent');\n    }\n  });\n\n  afterEach('should delete a project', async () => {\n    // await proj.delete('Parent');\n  });\n\n  it('should create and remove a vcsroot', async () => {\n    await vcs.create({\n      name: 'Test Vcs Root',\n      projectName: 'Child',\n      url: 'https://github.com/wenisman/teamcity-connector.git',\n      branch: 'master',\n      vcsType: 'jetbrains.git'\n    })\n    .then((result) => {\n      // result.getOrElse(true).should.be(true);\n    })\n    .catch((e) => {\n      console.log(e);\n      assert.fail(null, null, 'unable to create a vcsroot');\n    });\n\n    // await vcs.delete('Test Vcs Root');\n  });\n});\n"]}